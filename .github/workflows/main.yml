name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch :
jobs:

  Security:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@master
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
         dotnet-version: 6.0.x
         
      - name: Restore dependencies
        run: dotnet restore ./OnlineGames.Server/OnlineGames.Server.sln
        
      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Run Snyk test on .NET project
        working-directory: ./OnlineGames.Server
        run: snyk test --all-projects --severity-threshold=high #--file=./OnlineGames.Server/OnlineGames.Server.sln
        continue-on-error: true

      - name: Monitor in Snyk for high-severity issues
        working-directory: ./OnlineGames.Server
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk monitor --all-projects --severity-threshold=high 
        #continue-on-error: true

  Build:
    runs-on: ubuntu-latest
    needs: [Security]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      working-directory: ./OnlineGames.Server
      run: dotnet restore
      
    - name: Build
      working-directory: ./OnlineGames.Server
      run: dotnet build --no-restore
      
    - name: Test
      working-directory: ./OnlineGames.Server
      run: dotnet test --no-build --verbosity normal
      
    - name : Upload repo
      uses: actions/upload-artifact@v4
      with:
        name: code
        path: .

  BuildDocker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps: 
      - name: Download artifact
        uses: actions/download-artifact@v4
        with: 
          name: code
          path: .
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: sashovas
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build  Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./OnlineGames.Server
          file: ./OnlineGames.Server/Dockerfile 
          push: false
          tags: ghcr.io/sashovas/online_games_api:latest
          outputs: type=docker
          
      - name: Export image as a tarball
        run: docker save ghcr.io/sashovas/online_games_api:latest -o image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-image
          path: image.tar
          
  ScanDocker-imageWithTrivy:
    runs-on: ubuntu-latest
    needs: [BuildDocker-image] 

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: built-image

      - name: Load Docker image from tarball
        run: docker load -i image.tar

      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
           image-ref: ghcr.io/sashovas/online_games_api:latest
           severity: HIGH,CRITICAL  
           ignore-unfixed: true  
        
  PushDocker-image:
    runs-on: ubuntu-latest
    needs: [ScanDocker-imageWithTrivy]  

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: built-image

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load Docker image from tarball
        run: docker load -i image.tar

      - name: Push Docker image
        run: docker push ghcr.io/sashovas/online_games_api:latest


